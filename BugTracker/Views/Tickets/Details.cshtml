@model BugTracker.Models.Ticket
@using Microsoft.AspNet.Identity;
@using BugTracker.Utilities

@{
	ViewBag.Title = "Details";
	var ticketHelper = new TicketHelper();
}

<h2>Details</h2>

<div class="container">
	<div class="row">
		<div class="col-md-offset-1 col-md-10">
			<p>Project Data</p>
			<br />
			<h2>Project name: @Model.Project.Name</h2>
			<h2>Project Created: @Model.Project.Created</h2>
		</div>

	</div>
	<div class="row">
		<div class="col-md-12">
			<p>Ticket Data</p>
			<br />
			<h2>Title: @Model.Issue</h2>
			<h2>Priority: @Model.TicketPriority.Name</h2>
			<h2>Status: @Model.TicketStatus.Name</h2>
			<h2>Type: @Model.TicketType.Name</h2>
		</div>
	</div>
	<div class="row">
		<div class="col-md-6">

		</div>
		@if (ticketHelper.CanAddAttachment(Model.Id))
		{
			<div class="col-md-6">
				@using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.AntiForgeryToken()
					@Html.Hidden("TicketId", Model.Id)

					<div class="form-group">
						@Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
						</div>
					</div>

					<div class="form-group">
						@Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							@Html.TextArea("attachmentDescription", new { htmlAttributes = new { @class = "form-control" } })
						</div>
					</div>

					<div class="form-group">
						@Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
						<div class="col-md-10">
							<input type="file" name="file" />
						</div>
					</div>


					<div class="form-group">
						<div class="col-md-offset-2 col-md-10">
							<input type="submit" class="btn btn-primary btn-wide" value="Add Attachment" />
						</div>
					</div>

				}

				<hr />

				<table class="table">
					<tr>
						<th>
							@Html.DisplayName("Icon")
						</th>
						<th>
							@Html.DisplayName("Title")
						</th>
						<th>
							@Html.DisplayName("File Name")
						</th>
					</tr>

					@foreach (var attachment in Model.Attachments)
					{
						<tr>
							<td>
							</td>
							<td>
								@Html.DisplayFor(modelItem => attachment.FileName)
							</td>
							<td>
								<a target="_blank" href="@attachment.FilePath">@attachment.FileName</a>
							</td>
						</tr>
					}

				</table>

			</div>
		}
	</div>
</div>

@if (Model.Comments.Count != 0)
{
	<table class="table">
		<tr>

			<th>
				First Name
			</th>
			<th>
				Comment
			</th>
			<th>
				Posted On
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model.Comments.OrderByDescending(c => c.Created))
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.User.FullName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Comment)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Created)
				</td>
				<td>
					@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
					@Html.ActionLink("Details", "Details", new { id = item.Id }) |
					@Html.ActionLink("Delete", "Delete", new { id = item.Id })
				</td>
			</tr>
		}

	</table>
}
else
{
	<h4> No comments have been made for this Ticket</h4>
}
@if (ticketHelper.CanMakeComment(Model.Id))
{
	using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>TicketComment</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.Hidden("TicketId", Model.Id)

			<div class="form-group">
				@Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessage("Comment", "", new { @class = "text-danger" })
				</div>
			</div>


			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
}
<p>
	@if(ticketHelper.CanEditTicket(Model.Id))
	{
	@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) <span>|</span>
	}
	@Html.ActionLink("Back to List", "Index")
</p>
