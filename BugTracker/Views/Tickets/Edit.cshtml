@model BugTracker.Models.Ticket

@{
	ViewBag.Title = "Edit";
}


<div class="content">
	<div class="card">

		@using (Html.BeginForm())
		{
			@Html.AntiForgeryToken()

			<div class="form-horizontal">
				<div class="card-header">
					<h4>Edit Ticket</h4>
				</div>
			</div>
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Id)
			@Html.HiddenFor(model => model.Created)
			@Html.HiddenFor(model => model.ProjectId)
			@Html.HiddenFor(model => model.SubmitterId)
			@Html.HiddenFor(model => model.DeveloperId)


			<div class="form-group">
				@Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TicketStatusId, "TicketStatusId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("TicketTypeId", null,  htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
				</div>
			</div>

			if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
			{
				<div class="form-group">
					@Html.LabelFor(model => model.DeveloperId, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("DeveloperId", null, htmlAttributes: new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
					</div>
				</div>
			}
			<div class="form-group">
				@Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IssueDescription, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsResolved, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsResolved)
						@Html.ValidationMessageFor(model => model.IsResolved, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsArchived, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsArchived)
						@Html.ValidationMessageFor(model => model.IsArchived, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
	
		}
	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>
	</div>
</div>


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
